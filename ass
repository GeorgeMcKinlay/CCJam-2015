local bedrockPath='/' if OneOS then OneOS.LoadAPI('/System/API/Bedrock.lua', false)elseif fs.exists(bedrockPath..'/Bedrock')then os.loadAPI(bedrockPath..'/Bedrock')else if http then print('Downloading Bedrock...')local h=http.get('http://pastebin.com/raw.php?i=0MgKNqpN')if h then local f=fs.open(bedrockPath..'/Bedrock','w')f.write(h.readAll())f.close()h.close()os.loadAPI(bedrockPath..'/Bedrock')else error('Failed to download Bedrock. Is your internet working?') end else error('This program needs to download Bedrock to work. Please enable HTTP.') end end if Bedrock then Bedrock.BasePath = bedrockPath Bedrock.ProgramPath = shell.getRunningProgram() end

local program = Bedrock:Initialise()

local initConfigsView = nil
local initConfigWizard = nil

initConfigWizard = function()
  program:LoadView("configwiz")

  local config = {}
  local viewIndex = 1
  local views = {
    [1] = program:GetObject("ConfigTypeView"),
    [2] = program:GetObject("ConfigSettingsView")
  }

  local function changeView(idx)
    if idx <= #views and idx > 0 then
      viewIndex = idx

      for k,v in pairs(views) do
        v.Visible = k == idx
        v.Enabled = k == idx
        v.IgnoreClick = k ~= idx
      end
    end
  end

  changeView(1)

  local backButton = program:GetObject("Back")
  backButton.OnClick = function(self, event, side, x, y)
    return initConfigsView()
  end

  local nextButton = program:GetObject("Next")
  nextButton.OnClick = function(self, event, side, x, y)
    changeView(viewIndex + 1)
  end

  local prevButton = program:GetObject("Previous")
  prevButton.OnClick = function(self, event, side, x, y)
    changeView(viewIndex - 1)
  end

  local radioLuaProg = program:GetObject("RadioLuaProg")
  local radioAssTask = program:GetObject("RadioASSTask")

  radioLuaProg.Friends = {
    radioAssTask
  }

  radioAssTask.Friends = {
    radioLuaProg
  }
end

initConfigsView = function()
  program:LoadView("configurations")

  local configList = program:GetObject("ConfigList")
  if #configList.Items > 1 then
    configList:SelectItem(configList:GetNth(1))
  end

  local addButton = program:GetObject("Add")
  addButton.OnClick = function(self, event, side, x, y)
    return initConfigWizard()
  end

  local exitButton = program:GetObject("Exit")

  if OneOS then
    exitButton.Visible = false
    program:GetObject("Heading").X = 2
  end

  exitButton.OnClick = function(self, event, side, x, y)
    program:Quit()
  end
end

program:Run(function()
  return initConfigsView()
end)
